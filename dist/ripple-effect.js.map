{"version":3,"sources":["ripple-effect.js"],"names":["RippleEffect","opts","vertex","a","time","playhead","Math","random","parent","console","warn","intensity","strength","area","waveSpeed","speedIn","speedOut","texture","error","userHover","undefined","hover","easing","scene","THREE","Scene","camera","OrthographicCamera","offsetWidth","offsetHeight","position","z","renderer","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","appendChild","domElement","loader","TextureLoader","crossOrigin","load","texture2","minFilter","LinearFilter","anisotropy","getMaxAnisotropy","mat","ShaderMaterial","uniforms","type","value","image","image2","mouseOver","vertexShader","fragmentShader","transparent","geometry","PlaneBufferGeometry","object","Mesh","add","evtIn","check","navigator","userAgent","vendor","opera","test","substr","addEventListener","e","gsap","to","duration","ease","addEvents","start","stop","animate","requestAnimationFrame","render"],"mappings":";AAMA,SAAA,EAAA,GAAA,MAAA,IAAA,UAAA,IAAA,EAAA,kBAAA,IAAIA,EAAe,SAASC,GACpBC,IAsEmBC,EAInBC,EAAO,EAEPC,GANmBF,EAMH,IAAG,EALHA,GAAKG,KAAKC,SAOxBC,EAASP,EAAKO,QAAUC,QAAQC,KAAK,cACrCC,EAAYV,EAAKU,WAAa,EAC9BC,EAAWX,EAAKW,UAAY,EAC5BC,EAAOZ,EAAKY,MAAQ,EACpBC,EAAYb,EAAKa,WAAa,IAC9BC,EAAUd,EAAKc,SAAW,IAC1BC,EAAWf,EAAKe,UAAY,IAE9BC,EAAUhB,EAAKgB,SAAWR,QAAQS,MAAM,eACxCC,OAA4BC,IAAfnB,EAAKoB,OAA8BpB,EAAKoB,MACrDC,EAASrB,EAAKqB,QAAU,eAQtBC,EAAQ,IAAIC,MAAMC,MAClBC,EAAS,IAAIF,MAAMG,mBACrBnB,EAAOoB,aAAe,EACtBpB,EAAOoB,YAAc,EACrBpB,EAAOqB,aAAe,EACtBrB,EAAOqB,cAAgB,EACvB,EACA,KAEJH,EAAOI,SAASC,EAAI,EAEdC,IAAAA,EAAW,IAAIR,MAAMS,cAAc,CACrCC,WAAW,IAIfF,EAASG,cAAcC,OAAOC,kBAC9BL,EAASM,cAAc,SAAU,GACjCN,EAASO,QAAQ/B,EAAOoB,YAAapB,EAAOqB,cAC5CrB,EAAOgC,YAAYR,EAASS,YAEtBC,IAAAA,EAAS,IAAIlB,MAAMmB,cACzBD,EAAOE,YAAc,GACjB3B,EAAUyB,EAAOG,KAAK5B,GAAtBA,IACA6B,EAAWJ,EAAOG,KAAKC,GAE3B7B,EAAQ8B,UAAYvB,MAAMwB,aAC1B/B,EAAQgC,WAAajB,EAASkB,mBAExBC,IAAAA,EAAM,IAAI3B,MAAM4B,eAAe,CACjCC,SAAU,CACNjD,KAAM,CAAEkD,KAAM,IAAKC,MAAO,GAC1BC,MAAO,CAAEF,KAAM,IAAKC,MAAOtC,GAC3BwC,OAAQ,CAAEH,KAAM,IAAKC,MAAOT,GAC5BY,UAAW,CAAEJ,KAAM,IAAKC,MAvDhB,GAwDR5C,UAAW,CAAE2C,KAAM,IAAKC,MAAO5C,EAAYN,GAC3CO,SAAU,CAAE0C,KAAM,IAAKC,MAAO3C,EAAWP,GACzCQ,KAAM,CAAEyC,KAAM,IAAKC,MAAO1C,EAAOR,GACjCS,UAAW,CAAEwC,KAAM,IAAKC,MAAOzC,EAAYT,IAG/CsD,aAzIJ,4LA0IIC,eAjIJ,uwDAkIIC,aAAa,IAGXC,EAAW,IAAItC,MAAMuC,oBACvBvD,EAAOoB,YACPpB,EAAOqB,aACP,GAEEmC,EAAS,IAAIxC,MAAMyC,KAAKH,EAAUX,GACxC5B,EAAM2C,IAAIF,GA0BN7C,GAxBc,WACRgD,IA3DIhE,EADNiE,EAAAA,GAAQ,EACFjE,EAAo9DkE,UAAUC,WAAWD,UAAUE,QAAQnC,OAAOoC,OAA5/D,sVAAsVC,KAAKtE,IAAI,0kDAA0kDsE,KAAKtE,EAAEuE,OAAO,EAAE,OAAKN,GAAQ,GAC/8DA,IA6DH,EAAA,SACA,EAAA,WAEJ5D,EAAOmE,iBANO,aAMiB,SAASC,GACpCC,KAAKC,GAAG3B,EAAIE,SAASK,UAAW,CAC5BqB,SAAUhE,EACVwC,MAAO,EACPyB,KAAM1D,MAIdd,EAAOmE,iBAbQ,aAaiB,SAASC,GACrCC,KAAKC,GAAG3B,EAAIE,SAASK,UAAW,CAC5BqB,SAAU/D,EACVuC,MAAO,EACPyB,KAAM1D,MAMd2D,GAGJ7C,OAAOuC,iBAAiB,SAAU,SAASC,GACvC5C,EAASO,QAAQ/B,EAAOoB,YAAapB,EAAOqB,gBAI3CqD,KAAAA,MAAQ,WACTL,KAAKC,GAAG3B,EAAIE,SAASK,UAAW,CAC5BqB,SAAUhE,EACVwC,MAAO,EACPyB,KAAM1D,KAIT6D,KAAAA,KAAO,WACRN,KAAKC,GAAG3B,EAAIE,SAASK,UAAW,CAC5BqB,SAAU/D,EACVuC,MAAO,EACPyB,KAAM1D,MAIE,SAAV8D,IACFhF,IAEA+C,EAAIE,SAASjD,KAAKmD,MAAQnD,EAC1BiF,sBAAsBD,GACtBpD,EAASsD,OAAO/D,EAAOG,GAE3B0D","file":"ripple-effect.js","sourceRoot":"..\\src","sourcesContent":["/*!\r\n * ripple-effect PACKAGED v1.0.0\r\n * Author: Essam Abed\r\n * MIT License\r\n */\r\n\r\nvar RippleEffect = function(opts) {\r\n    var vertex = `\r\n        varying vec2 vUv;\r\n        \r\n        void main() {\r\n            vUv = uv;\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n        }\r\n    `;\r\n\r\n    var fragment = `\r\n        uniform sampler2D image;\r\n        uniform sampler2D image2;\r\n        uniform float time;\r\n        uniform float mouseOver;\r\n        uniform float intensity;\r\n        uniform float strength;\r\n        uniform float area;\r\n        uniform float waveSpeed;\r\n        varying vec2 vUv;\r\n\r\n        #define NUM_OCTAVES 5\r\n\r\n        float rand(vec2 n) { \r\n            return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n        }\r\n\r\n        float noise(vec2 p) {\r\n            vec2 ip = floor(p);\r\n            vec2 u = fract(p);\r\n            u = u*u*(3.0-2.0*u);\r\n            \r\n            float res = mix(\r\n                mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\r\n                mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\r\n            return res*res;\r\n        }\r\n\r\n        float fbm(vec2 x) {\r\n            float v = 0.0;\r\n            float a = 0.5;\r\n            vec2 shift = vec2(100);\r\n            // Rotate to reduce axial bias\r\n            mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\r\n            for (int i = 0; i < NUM_OCTAVES; ++i) {\r\n                v += a * noise(x);\r\n                x = rot * x * 2.0 + shift;\r\n                a *= 0.5;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        void main(void) {\r\n            vec2 uv = vUv;\r\n            \r\n            vec2 surface = strength * vec2(\r\n                mix(-0.1, 0.2, fbm(5.*uv + waveSpeed * time)),\r\n                mix(-0.1, 0.2, fbm(5.*uv + waveSpeed * time))\r\n            );\r\n\r\n            uv += mouseOver * intensity * refract(\r\n                vec2(0, 0), \r\n                surface, \r\n                1.0 / 1.333\r\n            );\r\n\r\n            vec3 _texture = texture2D(image, uv).rgb;\r\n            gl_FragColor = vec4(_texture,1.0);            \r\n        }   \r\n    `;\r\n\r\n    const rand = function (a, b){\r\n        return a + (b - a) * Math.random();\r\n    };\r\n\r\n    var time = 0;\r\n    var mouseOver = 0;\r\n    var playhead = rand(1, 2);\r\n    \r\n    const parent = opts.parent || console.warn(\"no parent!\");\r\n    const intensity = opts.intensity || 1;\r\n    const strength = opts.strength || 2;\r\n    const area = opts.area || 6;\r\n    const waveSpeed = opts.waveSpeed || 0.01;\r\n    const speedIn = opts.speedIn || 1.4;\r\n    const speedOut = opts.speedOut || 1.2;\r\n    \r\n    var texture = opts.texture || console.error(\"no texture!\");\r\n    var userHover = (opts.hover === undefined) ? true : opts.hover;\r\n    var easing = opts.easing || 'Expo.easeOut';\r\n\r\n    const mobileAndTabletcheck = function() {\r\n        var check = false;\r\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n        return check;\r\n    };\r\n\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.OrthographicCamera(\r\n        parent.offsetWidth / -2,\r\n        parent.offsetWidth / 2,\r\n        parent.offsetHeight / 2,\r\n        parent.offsetHeight / -2,\r\n        1,\r\n        1000\r\n    );\r\n    camera.position.z = 1;\r\n\r\n    const renderer = new THREE.WebGLRenderer({\r\n        antialias: false,\r\n        // alpha: true\r\n    });\r\n\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setClearColor(0xffffff, 0.0);\r\n    renderer.setSize(parent.offsetWidth, parent.offsetHeight);\r\n    parent.appendChild(renderer.domElement);\r\n\r\n    const loader = new THREE.TextureLoader();\r\n    loader.crossOrigin = \"\";\r\n    var texture = loader.load(texture)\r\n    var texture2 = loader.load(texture2)\r\n\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.anisotropy = renderer.getMaxAnisotropy();\r\n\r\n    const mat = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n            time: { type: 'f', value: 0 },\r\n            image: { type: 't', value: texture},\r\n            image2: { type: \"t\", value: texture2 },\r\n            mouseOver: { type: 'f', value: mouseOver },\r\n            intensity: { type: 'f', value: intensity * playhead },\r\n            strength: { type: 'f', value: strength * playhead },\r\n            area: { type: 'f', value: area * playhead},\r\n            waveSpeed: { type: 'f', value: waveSpeed * playhead },\r\n        },\r\n\r\n        vertexShader: vertex,\r\n        fragmentShader: fragment,\r\n        transparent: true,\r\n    });\r\n\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n        parent.offsetWidth,\r\n        parent.offsetHeight,\r\n        1\r\n    );\r\n    const object = new THREE.Mesh(geometry, mat);\r\n    scene.add(object);\r\n\r\n    const addEvents = function(){\r\n        const evtIn = \"mouseenter\";\r\n        const evtOut = \"mouseleave\";\r\n        if (mobileAndTabletcheck()) {\r\n            evtIn = \"touchstart\";\r\n            evtOut = \"touchend\";\r\n        }\r\n        parent.addEventListener(evtIn, function(e) {\r\n            gsap.to(mat.uniforms.mouseOver, {\r\n                duration: speedIn,\r\n                value: 1,\r\n                ease: easing\r\n            });\r\n        });\r\n\r\n        parent.addEventListener(evtOut, function(e) {\r\n            gsap.to(mat.uniforms.mouseOver, {\r\n                duration: speedOut,\r\n                value: 0,\r\n                ease: easing\r\n            });\r\n        });\r\n    };\r\n\r\n    if (userHover) {\r\n        addEvents();\r\n    }\r\n\r\n    window.addEventListener(\"resize\", function(e) {\r\n        renderer.setSize(parent.offsetWidth, parent.offsetHeight);\r\n    });\r\n\r\n\r\n    this.start = function(){\r\n        gsap.to(mat.uniforms.mouseOver, {\r\n            duration: speedIn,\r\n            value: 1,\r\n            ease: easing\r\n        });\r\n    }\r\n\r\n    this.stop = function(){\r\n        gsap.to(mat.uniforms.mouseOver, {\r\n            duration: speedOut,\r\n            value: 0,\r\n            ease: easing\r\n        });\r\n    };\r\n\r\n    const animate = function() {\r\n        time ++;\r\n\r\n        mat.uniforms.time.value = time;\r\n        requestAnimationFrame(animate);\r\n        renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n};"]}